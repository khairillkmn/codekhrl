#include <iostream>
using namespace std;
#define MAX 10

struct Antrian
{
    int data[MAX];
    int head;
    int tail;
};

void enqueue(int data);
int dequeue();
void tampil();

int main()
{
    int pilih,indata;

    pilihprogram:

    cout <<"\n";
    cout<<"1. Enqueue\n";
    cout<<"2. Dequeue\n";
    cout<<"3. Tampilkan Data\n";
    cout<<"\nPilih Opsi : ";
    cin>>pilih;

    switch(pilih)
    {
        case 1 : cout<<"\nMasukkan data : ";
                 cin>>indata;
                 enqueue(indata);
                 goto pilihprogram;
                 break;

        case 2 : cout<<"\nBerhasil dequeue\n";
                 dequeue();
                 goto pilihprogram;
                 break;

        case 3 : cout<<"\nTampilkan data : \n";
                 tampil();
                 goto pilihprogram;
                 break;

        default :cout<<"\nPilihan Invalid";
                 break;
    }
    return 0;
}

Antrian antre;

void create()
{
    antre.head = antre.tail = -1;
}

bool isEmpty()
{
    if(antre.tail == -1)
    {
        return true;
    }
    else
    {
        return false;
    }
}

bool isFull()
{
    if(antre.tail == MAX)
    {
        return true;
    }
    else
    {
        return false;
    }
}

//Cek apakah queue penuh, jika penuh tampilkan tulisan queue penuh. jika tidak, enqueue ke queue
void enqueue(int data)
{
    if(isFull())
    {
        cout<<"\nQueue penuh\n";
    }
    else
    {
        if(isEmpty())
        {
            antre.head = antre.tail = 0;
            antre.data[antre.tail] = data;
            antre.head++;
            antre.tail++;
        }
        else
        {
            antre.data[antre.tail] = data;
            antre.tail++;
            cout<<"\n"<<"["<<data<<"]"<<" Dimasukan ke dalam queue\n";
        }
    }
}

//Cek apakah queue kosong, jika iya tampilkan tulisan queue kosong. jika tidak, dequeue dari queue
int dequeue()
{
    if(isEmpty())
    {
        cout<<"\nAntrian kosong"<<endl;
    }
    else
    {
        int e = antre.data[antre.head];
        for(int i=0;i<antre.tail;i++)
        {
            antre.data[i] = antre.data[i+1];
        }
        antre.tail--;
        return e;
    }
}

void tampil()
{
    cout<<"\nData antrian : \n\n";
    if(isEmpty())
    {
        cout<<"\nAntrian kosong\n";
    }
    else
    {
        for(int i = 0;i<MAX;i++)
        {
            if(antre.data[i] == NULL)
            {
                cout<<i+1<<" Data Kosong\n";
            }
            else
            {
                cout<<i+1<<". "<<antre.data[i]<<endl;
            }
        }
    }
}
